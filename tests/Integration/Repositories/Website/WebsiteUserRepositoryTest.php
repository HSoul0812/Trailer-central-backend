<?php
namespace Tests\Integration\Repositories\Website;

use App\Repositories\Website\WebsiteUserRepository;
use App\Repositories\Website\WebsiteUserRepositoryInterface;
use Laravel\Lumen\Testing\DatabaseTransactions;
use Tests\database\seeds\Website\WebsiteSeeder;
use Tests\TestCase;

/**
 * Class WebsiteUserRepositoryTest
 *
 * @package Tests\Integration\Repositories\Website
 * @coversDefaultClass \App\Repositories\Website\WebsiteUserRepository
 */
class WebsiteUserRepositoryTest extends TestCase {
    use DatabaseTransactions;

    private $seeder;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seeder = new WebsiteSeeder();
    }

    public function tearDown(): void
    {
        $this->seeder->cleanUp();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testCreate() {
        $this->seeder->seed();
        $params = [
            'first_name' => 'First Name',
            'middle_name' => 'Middle Name',
            'last_name' => 'Last Name',
            'email' => 'email@email.com',
            'password' => '12345',
            'website_id' => $this->seeder->website->id,
            'token' => 'token12345'
        ];
        $websiteUser = $this->getConcreteRepository()->create($params);
        $this->assertEquals($websiteUser->email, $params['email']);
        $this->assertEquals($websiteUser->website_id, $params['website_id']);
        $this->assertEquals($websiteUser->token->access_token, $params['token']);
        $this->assertTrue($websiteUser->checkPassword($params['password']));
        $this->assertDatabaseHas(
            'dealer_website_user',
            ['website_id' => $params['website_id'], 'email' => $params['email']]
        );

        $this->assertDatabaseHas(
            'dealer_website_user_token',
            ['dealer_website_user_id' => $websiteUser->id, 'access_token' => $params['token']]
        );
    }

    protected function getConcreteRepository():WebsiteUserRepository {
        return $this->app->make(WebsiteUserRepositoryInterface::class);
    }
}
